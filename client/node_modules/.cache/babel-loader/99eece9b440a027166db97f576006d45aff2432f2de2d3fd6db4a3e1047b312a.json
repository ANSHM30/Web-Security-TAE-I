{"ast":null,"code":"import axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  // adjust if needed\n  withCredentials: true\n});\n\n// ================== SETUP INTERCEPTOR ==================\nAPI.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const {\n        data\n      } = await API.post(\"/auth/refresh\");\n      localStorage.setItem(\"accessToken\", data.accessToken);\n      API.defaults.headers.common[\"Authorization\"] = `Bearer ${data.accessToken}`;\n      return API(originalRequest);\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data, _err$response2$data$m;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 403 && (_err$response2 = err.response) !== null && _err$response2 !== void 0 && (_err$response2$data = _err$response2.data) !== null && _err$response2$data !== void 0 && (_err$response2$data$m = _err$response2$data.message) !== null && _err$response2$data$m !== void 0 && _err$response2$data$m.includes(\"expired\")) {\n        toast.error(\"Your session has expired. Please log in again.\");\n      } else {\n        toast.error(\"Invalid session. Please log in again.\");\n      }\n      localStorage.removeItem(\"accessToken\");\n      window.location.href = \"/login\";\n    }\n  }\n  return Promise.reject(error);\n});\n\n// ================== AUTH FUNCTIONS ==================\nexport async function login(email, password) {\n  const {\n    data\n  } = await API.post(\"/auth/login\", {\n    email,\n    password\n  });\n  localStorage.setItem(\"accessToken\", data.accessToken);\n  API.defaults.headers.common[\"Authorization\"] = `Bearer ${data.accessToken}`;\n  return data;\n}\nexport async function register(email, password) {\n  return API.post(\"/auth/register\", {\n    email,\n    password\n  });\n}\nexport function logout() {\n  localStorage.removeItem(\"accessToken\");\n  delete API.defaults.headers.common[\"Authorization\"];\n  window.location.href = \"/login\";\n}\nexport function getAccessToken() {\n  return localStorage.getItem(\"accessToken\");\n}\nexport function getUser() {\n  const token = getAccessToken();\n  if (!token) return null;\n  try {\n    return jwtDecode(token);\n  } catch {\n    return null;\n  }\n}\nexport default API;","map":{"version":3,"names":["axios","jwtDecode","toast","API","create","baseURL","withCredentials","interceptors","response","use","error","_error$response","originalRequest","config","status","_retry","data","post","localStorage","setItem","accessToken","defaults","headers","common","err","_err$response","_err$response2","_err$response2$data","_err$response2$data$m","message","includes","removeItem","window","location","href","Promise","reject","login","email","password","register","logout","getAccessToken","getItem","getUser","token"],"sources":["D:/Ansh/OneDrive/Desktop/Web Security/jwt-auth-refresh-app/client/src/services/authService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:5000/api\", // adjust if needed\r\n  withCredentials: true,\r\n});\r\n\r\n// ================== SETUP INTERCEPTOR ==================\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      try {\r\n        const { data } = await API.post(\"/auth/refresh\");\r\n        localStorage.setItem(\"accessToken\", data.accessToken);\r\n        API.defaults.headers.common[\r\n          \"Authorization\"\r\n        ] = `Bearer ${data.accessToken}`;\r\n        return API(originalRequest);\r\n      } catch (err) {\r\n        if (\r\n          err.response?.status === 403 &&\r\n          err.response?.data?.message?.includes(\"expired\")\r\n        ) {\r\n          toast.error(\"Your session has expired. Please log in again.\");\r\n        } else {\r\n          toast.error(\"Invalid session. Please log in again.\");\r\n        }\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/login\";\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ================== AUTH FUNCTIONS ==================\r\nexport async function login(email, password) {\r\n  const { data } = await API.post(\"/auth/login\", { email, password });\r\n  localStorage.setItem(\"accessToken\", data.accessToken);\r\n  API.defaults.headers.common[\"Authorization\"] = `Bearer ${data.accessToken}`;\r\n  return data;\r\n}\r\n\r\nexport async function register(email, password) {\r\n  return API.post(\"/auth/register\", { email, password });\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"accessToken\");\r\n  delete API.defaults.headers.common[\"Authorization\"];\r\n  window.location.href = \"/login\";\r\n}\r\n\r\nexport function getAccessToken() {\r\n  return localStorage.getItem(\"accessToken\");\r\n}\r\n\r\nexport function getUser() {\r\n  const token = getAccessToken();\r\n  if (!token) return null;\r\n  try {\r\n    return jwtDecode(token);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default API;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}